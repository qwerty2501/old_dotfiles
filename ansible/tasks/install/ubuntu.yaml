- name: Setting apt
  block:
    - name: Install apt packages
      become: true
      apt:
        name:
          - neovim
          - git
          - wget
          - curl
          - pwgen
          - nodejs
          - npm
          - direnv
          - clang-{{ clang_version }}
          - clang-tools-{{ clang_version }}
          - clangd-{{ clang_version }}
        update_cache: true
    - name: alternatives
      become: true
      shell: "update-alternatives --install {{ item.link }} {{ item.name }} {{ item.path }} 50"
      with_items:
        - name: "clang"
          link: "/usr/bin/clang"
          path: "/usr/bin/clang-{{ clang_version }}"
        - name: "clangd"
          link: "/usr/bin/clangd"
          path: "/usr/bin/clangd-{{ clang_version }}"
  vars:
    clang_version: 11

- stat:
    path: "{{ home }}/.anyenv"
  register: anyenv_is_installed
- name: Install anyenv
  become: false
  shell: "git clone https://github.com/riywo/anyenv {{ home }}/.anyenv"
  when: anyenv_is_installed.stat.exists == false

- stat:
    path: "{{ xdg_config_home }}/anyenv/anyenv-install"
  register: has_anyenv_install

- name: Init anyenv
  become: false
  shell: "{{ home }}/.anyenv/bin/anyenv install --force-init"
  when: has_anyenv_install.stat.exists == false

- name: Install envs
  become: false
  shell: "{{ home }}/.anyenv/bin/anyenv install -f {{ item }}"
  when: has_anyenv_install.stat.exists == false
  with_items:
    - goenv
    - nodenv
    - pyenv

- stat:
    path: "{{ home }}/.anyenv/envs/goenv/shims/go"
  register: installed_go

- name: Install go
  become: false
  shell: "{{ home }}/.anyenv/envs/goenv/bin/goenv install {{ version }} && {{ home }}/.anyenv/envs/goenv/bin/goenv global {{ version }}"
  vars:
    version: 1.14.6
  when: installed_go.stat.exists == false

- name: Install go tools without -u
  become: false
  shell: "{{ home }}/.anyenv/envs/goenv/shims/go get {{ packages | join(' ') }}"
  vars:
    packages:
      - golang.org/x/tools/gopls@latest

- stat:
    path: "{{ home }}/google-cloud-sdk/"
  register: has_google_cloud_sdk
- name: Install google cloud sdk
  shell: "curl https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-{{ version }}-linux-x86_64.tar.gz | tar zx -C {{ home }}"
  vars:
    version: 298.0.0
  when: has_google_cloud_sdk.stat.exists == false

- name: Update google cloud sdk
  shell: "gcloud components update --quiet"
  when: has_google_cloud_sdk.stat.exists == false
